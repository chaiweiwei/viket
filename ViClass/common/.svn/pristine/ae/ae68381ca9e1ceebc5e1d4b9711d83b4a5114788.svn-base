//
//  QQEngine.m
//  OpenApi
//
//  Created by yulong chen on 13-1-16.
//  Copyright (c) 2013年 __MyCompanyName__. All rights reserved.
//

#import "QQEngine.h"
#import "QQAuthorize.h"
#import "TipsUtils.h"

@implementation QQEngine

#define kQQBaseURL @"https://graph.qq.com/"
#define kUserAgent @"TencentConnect"
#define kGeneralErrorCode  10000

-(id) init{
    if (self=[super init]) {
        self.weiboType=TypeQQ;
        self.keychainPrefix=@"QQAuth";
    }
    return self;
}

-(void) logIn{
    QQAuthorize *auth = [[QQAuthorize alloc] initWithAppKey:appKey appSecret:appSecret];
    auth.isChangeLogin=self.isChangeLogin;
    [auth setRootViewController:rootViewController];
    [auth setDelegate:self];
    auth.isMode=self.isMode;
    self.authorize = auth;
    [auth release];
    
    if ([redirectURI length] > 0){
        [authorize setRedirectURI:redirectURI];
    }else{
        [authorize setRedirectURI:@"http://"];
    }
    self.requestPath=WeiboRequestPathForOAuth;
    
    [authorize startAuthorize];
}

-(void) logInUsingUserID:(NSString *)theUserID password:(NSString *)thePassword{
    
}

- (void)loadRequestWithMethodName:(NSString *)methodName
                       httpMethod:(NSString *)httpMethod
                           params:(NSDictionary *)params
                     postDataType:(WBRequestPostDataType)postDataType
                 httpHeaderFields:(NSMutableDictionary *)httpHeaderFields
{
    // Step 1.
    // Check if the user has been logged in.
	if (![self isLoggedIn])
	{
        [TipsUtils removeWaitingView:self.rootViewController.view];
        if ([delegate respondsToSelector:@selector(engineNotAuthorized:)])
        {
            [delegate engineNotAuthorized:self];
        }
        return;
	}
    
	// Step 2.
    // Check if the access token is expired.
    if ([self isAuthorizeExpired])
    {
        [TipsUtils removeWaitingView:self.rootViewController.view];
        if ([delegate respondsToSelector:@selector(engineAuthorizeExpired:)])
        {
            [delegate engineAuthorizeExpired:self];
        }
        return;
    }
    
    [request disconnect];
    
    if (!httpHeaderFields) {
        httpHeaderFields=[NSMutableDictionary dictionary];
    }
    [httpHeaderFields setObject:kUserAgent forKey:@"User-Agent"];
    
    NSString *server=kQQBaseURL;
    self.request = [WBRequest requestWithAccessToken:accessToken
                                                 url:[NSString stringWithFormat:@"%@%@", server, methodName]
                                          httpMethod:httpMethod
                                              params:params
                                        postDataType:postDataType
                                    httpHeaderFields:httpHeaderFields
                                            delegate:self];
	
	[request connect];
}

#pragma mark - WBEngine Private Methods
/*
 * 接口请求的公共参数，必须携带
 */
- (void) getPublicParams:(NSMutableDictionary *) publicParams {
    if (!self.appKey || !self.accessToken || !self.userID) {
        return ;
    }
    
    [publicParams setValue:@"json" forKey:@"format"];
	[publicParams setValue:self.appKey forKey:@"oauth_consumer_key"];
	[publicParams setValue:self.accessToken forKey:@"access_token"];
	[publicParams setValue:self.userID forKey:@"openid"];
}

/**
 * 查看用户信息
 * @param wuid 微博用户id
 */
-(void) showUser:(NSString *) wuid
{
    NSMutableDictionary *params=[NSMutableDictionary dictionary];
    NSString *requestMethod = nil;
    if (wuid && ![wuid isEqualToString:self.userID]) {
        requestMethod=@"get_other_info";
        [params setObject:wuid forKey:@"fopenid"];
    }else {
        requestMethod=@"user/get_info";
    }
    self.requestPath=WeiboRequestPathForShowUser;
    
    
    [self getPublicParams:params];
    
    [self loadRequestWithMethodName:requestMethod
                         httpMethod:@"GET"
                             params:params
                       postDataType:kWBRequestPostDataTypeNone
                   httpHeaderFields:nil];
}

@end
