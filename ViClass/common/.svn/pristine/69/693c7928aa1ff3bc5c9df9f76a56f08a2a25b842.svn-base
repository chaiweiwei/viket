//
//  LoginCheckViewController.m
//  OpenApi
//
//  Created by yulong chen on 12-12-29.
//  Copyright (c) 2012年 __MyCompanyName__. All rights reserved.
//

#import "LoginCheckViewController.h"
#import "IconTextButton.h"
#import "UIView+LayerEffects.h"
#import "ALDUtils.h"
#import "WBSinaEngine.h"
#import "WBTecentEngine.h"
#import "WBWyEngine.h"
#import "WeiBosendViewController.h"
#import "TaobaoAuthViewController.h"
#import "NearlyViewController.h"
#import "TencentOAuth.h"
#import "QQEngine.h"
#import "LoginCustomViewController.h"
#import "PhoneLoginViewController.h"
#import "ALDAppDelegate.h"
#import "LinkedInEngine.h"

@interface LoginCheckViewController ()
@property (nonatomic,retain) NSDictionary *userInfo;

@end

@implementation LoginCheckViewController
@synthesize delegate=_delegate;
@synthesize userBean=_userBean;
@synthesize appSn=_appSn;
@synthesize serverUrl=_serverUrl;
@synthesize apiItems=_apiItems;
@synthesize userInfo=_userInfo;

#define kTagOfSet 1000

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
	if (!self.title || [self.title isEqualToString:@""]) {
        self.title=@"选择开放平台登录";
    }
    self.view.autoresizingMask=UIViewAutoresizingFlexibleWidth|UIViewAutoresizingFlexibleHeight;
    
    CGRect bounds=self.view.frame;
    UIScrollView *scrollView=[[UIScrollView alloc] initWithFrame:CGRectMake(0, 0, bounds.size.width, bounds.size.height)];
    scrollView.autoresizingMask=UIViewAutoresizingFlexibleWidth|UIViewAutoresizingFlexibleHeight;
    CGFloat startY=10;
    for (NSDictionary *item in _apiItems) {
        NSString *title=[item objectForKey:@"title"];
        NSString *icon=[item objectForKey:@"icon"];
        int tag=[[item objectForKey:@"tag"] intValue];
        UIButton *btn=[self createItemView:title icon:icon startY:startY tag:(kTagOfSet+tag)];
        [scrollView addSubview:btn];
        startY+=btn.frame.size.height+15;
    }
    [self.view addSubview:scrollView];
    scrollView.contentSize=CGSizeMake(bounds.size.width, 30+57*_apiItems.count);
    [scrollView release];
}

-(UIButton*) createItemView:(NSString*) text icon:(NSString*)icon startY:(CGFloat)startY tag:(NSInteger)tag{
    CGRect frame=CGRectMake(20, startY, 265, 42);
    IconTextButton *button=[[IconTextButton alloc] initWithFrame:frame text:text icon:[UIImage imageNamed:icon]];
    button.tag=tag;
    [button addTarget:self action:@selector(btnClicked:) forControlEvents:UIControlEventTouchUpInside];
    button.iconSize=CGSizeMake(30, 30);
    button.iconTextDis=15;
    [button getTextView].textColor=[UIColor whiteColor];
    [button setNavigationButtonWithColor:[UIColor navigationBarButtonColor]];
    button.padding=50;
    button.alignment=UITextAlignmentLeft;
    return [button autorelease];
}

-(void) btnClicked:(UIButton*) sender{
    int tag=sender.tag;
    int index=tag-kTagOfSet;
    UIBarButtonItem *backItem = [[UIBarButtonItem alloc] initWithTitle:@"返回" style:UIBarButtonItemStyleBordered target:nil action:nil];  
    [self.navigationItem setBackBarButtonItem:backItem];//修改的是navigationItem  
    [backItem release]; 
    switch (index) {
        case 1: {//新浪微博登录
            _apiType=1;
            [OpenApiUtils loginWithPlatform:OpenApiOfSWeibo appKey:kSINAAPPKEY appSecret:kSINAAPPSECRET redirectUrl:kRedirectUri delegate:self parent:self];
        }
            break;
        case 2: {//腾讯微博登录
            _apiType=2;
            [OpenApiUtils loginWithPlatform:OpenApiOfTWeibo appKey:kTecentAppKey appSecret:kTecentAppSecret redirectUrl:kRedirectUri delegate:self parent:self];
        }
            break;
        case 3:{ //网易微博登录
             _apiType=5;
            [OpenApiUtils loginWithPlatform:OpenApiOfWyWeibo appKey:kWyAppKey appSecret:kWyAppSecret redirectUrl:kRedirectUri delegate:self parent:self];
        }
            break;
        case 4:{ //微信登录
            [ALDUtils showToast:@"微信登录"];
        }
            break;
        case 5:{ //QQ登录
            _apiType=4;
            QQEngine *tecentEngine = [[QQEngine alloc] initWithAppKey:kQQAppKey appSecret:kQQAppSecret];
            [tecentEngine setRootViewController:self];
            tecentEngine.isChangeLogin=YES;
            MyWBEngineDelegate *weiboDelegate=[[MyWBEngineDelegate alloc] init ];
            weiboDelegate.delegate=self;
            [tecentEngine setDelegate:weiboDelegate];
            [weiboDelegate release];
            [tecentEngine setRedirectURI:kQQRedirectUri];
            [tecentEngine setIsUserExclusive:NO];
            tecentEngine.isMode=YES;
            [tecentEngine logIn];
            [tecentEngine release];
        }
            break;
        case 6:{ //淘宝登录
            _apiType=3;
            TaobaoAuthViewController *controller=[[TaobaoAuthViewController alloc] init];
            controller.title=@"淘宝账户登录";
            controller.clientId=kTaobaoAppKey;
            controller.redirectUri=kTaobaoAuthCallback;
            controller.delegate=self;
//            [self.navigationController pushViewController:controller animated:YES];
            [self presentModalViewController:controller animated:YES];
            [controller startLoad];
            [controller release];
        }
            break;
        case 7:{ //分享
            UIBarButtonItem *backItem = [[UIBarButtonItem alloc] initWithTitle:@"返回" style:UIBarButtonItemStyleBordered target:nil action:nil];  
            [self.navigationItem setBackBarButtonItem:backItem];//修改的是navigationItem  
            [backItem release];
            WeiBosendViewController *controller=[[WeiBosendViewController alloc] init];
            controller.title=@"分享";
            controller.action=kFasong;
            [self.navigationController pushViewController:controller animated:YES];
            [controller release];
        }
            break;
        case 8:{ //自定义账号登录
            //在此做处理
//            [ALDUtils showToast:@"自定义账号登录待实现"];
            _apiType=-1;
            LoginCustomViewController *controller=[[LoginCustomViewController alloc] init];
            controller.title=@"自定义登录";
            controller.isMode=YES;
            controller.appSn=self.appSn;
            controller.serverUrl=_serverUrl;
            controller.delegate=self;
            [self presentModalViewController:controller animated:YES];
            [controller release];
        }
            break;
        case 9:{ //手机号登录
            _apiType=-1;
            PhoneLoginViewController *controller=[[PhoneLoginViewController alloc] init];
            controller.title=@"手机号登录";
            controller.isMode=YES;
            controller.appSn=self.appSn;
            controller.serverUrl=_serverUrl;
            controller.delegate=self;
            [self presentModalViewController:controller animated:YES];
            [controller release];
        }
            break;
        case 10:{
            self.userInfo = nil;
            
            SinaWeibo *sinaweibo = [self sinaweibo];
            sinaweibo.delegate=self;
            [sinaweibo logOut];
            [sinaweibo logIn];
        }
            break;
        case 11:{
            ALDAppDelegate *delegate=(ALDAppDelegate*)([UIApplication sharedApplication].delegate);
            if (delegate && delegate.wxDelegate) {
                if (![delegate.wxDelegate doAuth]) {
                    [ALDUtils showToast:@"你尚未安装微信，请先下载安装!"];
                }
            }
        }
            break;
        case 12:{ //LinkedIn 登录
            _apiType=101;
            LinkedInEngine *engine = [[LinkedInEngine alloc] initWithAppKey:kLinkedInAppKey appSecret:kLinkedInAppSecretKey];
            [engine setRootViewController:self];
            engine.isChangeLogin=YES;
            MyWBEngineDelegate *weiboDelegate=[[MyWBEngineDelegate alloc] init ];
            weiboDelegate.delegate=self;
            [engine setDelegate:weiboDelegate];
            [weiboDelegate release];
            [engine setRedirectURI:kLinkedInRedirectUri];
            [engine setIsUserExclusive:NO];
            engine.isMode=YES;
            [engine logIn];
            [engine release];
        }
            break;
        default:
            [ALDUtils showAlert:@
             "提示信息" strForMsg:@"不支持的登录方式" withTag:1111 otherButtonTitles:nil];
            break;
    }
}

- (void)viewDidUnload
{
    [super viewDidUnload];
    // Release any retained subviews of the main view.
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}

-(void) openApiLoginFailed:(NSError *)error{
    NSLog(@"error:%@",error);
    [ALDUtils removeWaitingView:self.view];
    if (_delegate && [_delegate respondsToSelector:@selector(openApiLoginFailed:)]) {
        [_delegate openApiLoginFailed:error];
    }
    [self dismissModalViewControllerAnimated:YES];
}

-(void) openApiLoginSuccessed:(OpenApiUserBean *)user{
    self.userBean=user;
    if (_apiType==101) {
        [ALDUtils showAlert:@"温馨提示" strForMsg:@"LinkedIn登录成功，欢迎你！" withTag:111 otherButtonTitles:nil];
    }else if (_apiType!=-1) {
        NSString *appid=[[NSUserDefaults standardUserDefaults] objectForKey:kAppidKey];
        ALDHttpClient *http=[ALDHttpClient httpClientWithDelegate:self];
        http.serverUrl=_serverUrl;
        http.needTipsNetError=YES;
        if (!appid || [appid isEqualToString:@""]) {
            [http registAppId:_appSn];
        }else {
            [http loginWithAppid:appid appSn:_appSn openUid:user.userId type:_apiType token:user.accessToken openKey:user.openKey];
        }
    }else {
        [ALDUtils showToast:@"登录成功，欢迎你!"];
        if (_delegate && [_delegate respondsToSelector:@selector(openApiLoginSuccessed:)]) {
            [_delegate openApiLoginSuccessed:_userBean];
        }
        NearlyViewController *controlview=[[NearlyViewController alloc]init];
        UIBarButtonItem *backItem = [[UIBarButtonItem alloc] initWithTitle:@"返回" style:UIBarButtonItemStyleBordered target:nil action:nil];  
        [self.navigationItem setBackBarButtonItem:backItem]; 
        [backItem release];
        controlview.title=@"附近的人";
        controlview.appSn=self.appSn;
        controlview.serverUrl=self.serverUrl;
        [self.navigationController pushViewController:controlview animated:YES];
        [controlview release];
        [self dismissModalViewControllerAnimated:YES];
    }
}

-(void) aldDataStartLoad:(ALDHttpRequestPath)requestPath{
    [ALDUtils addWaitingView:self.view withText:@"登录中，请稍候..."];
}

-(void) aldDataLoadDone:(ALDHttpRequestPath)requestPath withCode:(int)code withObj:(id)object{
    if (requestPath==ALDHttpRequestPathForAppid) {
        if (code==KOK) {
            ALDHttpClient *http=[ALDHttpClient httpClientWithDelegate:self];
            http.needTipsNetError=YES;
            http.serverUrl=@"http://mobiren.gicp.net:8003/oi/";
            [http loginWithAppid:object appSn:_appSn openUid:_userBean.userId type:_apiType token:_userBean.accessToken openKey:_userBean.openKey];
        }else if (code==kNET_ERROR|| code==kNET_TIMEOUT) {
            [ALDUtils removeWaitingView:self.view];
            [ALDUtils showToast:@"登录失败，网络异常!"];
        }else {
            [ALDUtils removeWaitingView:self.view];
            [ALDUtils showToast:@"抱歉，登录失败!"];
        }
    }else if (requestPath==ALDHttpRequestPathForOpenApiLogin) {
        [ALDUtils removeWaitingView:self.view];
        if (code==KOK) {
            [ALDUtils showToast:@"登录成功，欢迎你!"];
            if (_delegate && [_delegate respondsToSelector:@selector(openApiLoginSuccessed:)]) {
                [_delegate openApiLoginSuccessed:_userBean];
            }
            NearlyViewController *controlview=[[NearlyViewController alloc]init];
            UIBarButtonItem *backItem = [[UIBarButtonItem alloc] initWithTitle:@"返回" style:UIBarButtonItemStyleBordered target:nil action:nil];  
            [self.navigationItem setBackBarButtonItem:backItem]; 
            [backItem release];
            controlview.title=@"附近的人";
            controlview.appSn=self.appSn;
            controlview.serverUrl=self.serverUrl;
            [self.navigationController pushViewController:controlview animated:YES];
            [controlview release];
            [self dismissModalViewControllerAnimated:YES];
        }else if (code==kNET_ERROR|| code==kNET_TIMEOUT) {
            [ALDUtils showToast:@"登录失败，网络异常!"];
        }else {
            [ALDUtils showToast:@"抱歉，登录失败!"];
        }
    }
}

- (void)dealloc
{
    [_userInfo release];
    [_appSn release];
    [_serverUrl release];
    [_apiItems release];
    [_userBean release];
    [super dealloc];
}


- (SinaWeibo *)sinaweibo
{
    ALDAppDelegate *delegate = (ALDAppDelegate *)[UIApplication sharedApplication].delegate;
    return delegate.sinaweibo;
}

- (void)removeAuthData
{
    [[NSUserDefaults standardUserDefaults] removeObjectForKey:@"SinaWeiboAuthData"];
}

- (void)storeAuthData
{
    SinaWeibo *sinaweibo = [self sinaweibo];
    
    NSDictionary *authData = [NSDictionary dictionaryWithObjectsAndKeys:
                              sinaweibo.accessToken, @"AccessTokenKey",
                              sinaweibo.expirationDate, @"ExpirationDateKey",
                              sinaweibo.userID, @"UserIDKey",
                              sinaweibo.refreshToken, @"refresh_token", nil];
    [[NSUserDefaults standardUserDefaults] setObject:authData forKey:@"SinaWeiboAuthData"];
    [[NSUserDefaults standardUserDefaults] synchronize];
}

-(void) resetButtons{
    
}

#pragma mark - SinaWeibo Delegate

- (void)sinaweiboDidLogIn:(SinaWeibo *)sinaweibo
{
    [ALDUtils showToast:@"新浪微博授权成功"];
    NSLog(@"sinaweiboDidLogIn userID = %@ accesstoken = %@ expirationDate = %@ refresh_token = %@", sinaweibo.userID, sinaweibo.accessToken, sinaweibo.expirationDate,sinaweibo.refreshToken);
    
    [self resetButtons];
    [self storeAuthData];
}

- (void)sinaweiboDidLogOut:(SinaWeibo *)sinaweibo
{
    NSLog(@"sinaweiboDidLogOut");
    [self removeAuthData];
    [self resetButtons];
}

- (void)sinaweiboLogInDidCancel:(SinaWeibo *)sinaweibo
{
    NSLog(@"sinaweiboLogInDidCancel");
}

- (void)sinaweibo:(SinaWeibo *)sinaweibo logInDidFailWithError:(NSError *)error
{
    NSLog(@"sinaweibo logInDidFailWithError %@", error);
}

- (void)sinaweibo:(SinaWeibo *)sinaweibo accessTokenInvalidOrExpired:(NSError *)error
{
    NSLog(@"sinaweiboAccessTokenInvalidOrExpired %@", error);
    [self removeAuthData];
    [self resetButtons];
}

#pragma mark - SinaWeiboRequest Delegate

- (void)request:(SinaWeiboRequest *)request didFailWithError:(NSError *)error
{
    if ([request.url hasSuffix:@"users/show.json"])
    {
        self.userInfo = nil;
    }
    else if ([request.url hasSuffix:@"statuses/user_timeline.json"])
    {
        //[statuses release], statuses = nil;
        NSLog(@"获取用户首页失败");
    }
    
    
    [self resetButtons];
}

- (void)request:(SinaWeiboRequest *)request didFinishLoadingWithResult:(id)result
{
    if ([request.url hasSuffix:@"users/show.json"])
    {
        self.userInfo=result;
    }
    else if ([request.url hasSuffix:@"statuses/user_timeline.json"])
    {
//        [statuses release];
//        statuses = [[result objectForKey:@"statuses"] retain];
        NSLog(@"statuses:%@",result);
    }
    
    [self resetButtons];
}
@end
