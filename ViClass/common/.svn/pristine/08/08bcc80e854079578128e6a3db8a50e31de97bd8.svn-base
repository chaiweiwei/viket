//
//  TipsUtils.m
//  WeiboApi
//
//  Created by yulong chen on 12-7-31.
//  Copyright (c) 2012年 __MyCompanyName__. All rights reserved.
//

#import "TipsUtils.h"
#import "WaitingView.h"
#import "ALDToastView.h"
#import "OpenApiLocalizedString.h"

@implementation TipsUtils
/**
 * 添加提示信息，如果有等待状态则更改
 * @param rootView 等待视图添加到的根视图
 * @param text 提示文字
 */
+ (void)changeWaitingViewStatus:(UIView *)rootView withText:(NSString *) text{
    //NSLog(@"加载页面失败哦");
    WaitingView *waitingView = (WaitingView *)[rootView viewWithTag:kWaitingViewTag];
    if (!waitingView) {
        CGRect rc = CGRectMake(60, 120,200, 120);
        WaitingView *waitingView = [[WaitingView alloc] initWithFrame:rc];
        waitingView.activityPosition=WaitingActivityInTop;
        waitingView.tag = kWaitingViewTag;
        waitingView.showMessage = text;
        [rootView addSubview:waitingView];
        waitingView.warningView.hidden = NO;
        waitingView.activityIndicatorView.hidden = YES;
        [waitingView release];
    }else {
        waitingView.warningView.hidden = NO;
        waitingView.activityIndicatorView.hidden = YES;
        waitingView.showMessage = text;
        [waitingView setNeedsDisplay];
    }
}

/**
 * 添加等待状态信息，如果有提示状态则更改
 * @param rootView 等待视图添加到的根视图
 * @param text 提示文字
 */
+ (void) addWaitingView:(UIView *) rootView withText:(NSString *) text{
    WaitingView *waitingView = (WaitingView *)[rootView viewWithTag:kWaitingViewTag];
    if (!waitingView) {
        CGRect rc = CGRectMake(60, 120,200, 120);
        waitingView = [[WaitingView alloc] initWithFrame:rc];
        waitingView.activityPosition=WaitingActivityInTop;
        waitingView.tag = kWaitingViewTag;
        waitingView.showMessage = text;
        [rootView addSubview:waitingView];
        [waitingView release];
    }else {
        waitingView.warningView.hidden=YES;
        waitingView.showMessage = text;
        [waitingView setNeedsDisplay];
    } 
}

/**
 * 将之前添加的等待或提示信息移除
 * @param rootView 之前添加到的根视图
 **/
+ (void)removeWaitingView:(UIView *) rootView{
    //NSLog(@"页面加载完成哦");
    UIView *waitingView = [rootView viewWithTag:kWaitingViewTag];
    if (waitingView) {
        [waitingView removeFromSuperview];
    }
    
}

/**
 * 显示Toast提示信息，提示信息2秒后消失
 * @param text 提示文字
 */
+(void) showToast:(NSString *) text{
    [TipsUtils showToast:text withInterval:2.0f];
}

/**
 * 显示Toast提示信息，提示信息2秒后消失
 * @param text 提示文字
 * @param interval 提示信息显示时长，单位秒
 */
+(void) showToast:(NSString *) text withInterval:(float) interval{
    CGRect rc = CGRectMake(10, 150, 300, 40);
    ALDToastView *toastView = [[ALDToastView alloc] initWithFrame:rc];
    toastView.showTimes=interval;
    [toastView setTipsMessage:text];
    UIWindow *window = [UIApplication sharedApplication].keyWindow;
    if (!window)
    {
        window = [[UIApplication sharedApplication].windows objectAtIndex:0];
    }
    [window addSubview:toastView];
    [toastView release];
}

/**
 * 显示Toast提示信息，提示信息2秒后消失
 * @param rootView 等待视图添加到的根视图
 * @param text 提示文字
 */
+(void) showToast:(UIView *) rootView withText:(NSString *)text{
    [TipsUtils showToast:rootView withText:text withInterval:2.0];
}

/**
 * 显示Toast提示信息，提示信息interval秒后消失
 * @param rootView 等待视图添加到的根视图
 * @param text 提示文字
 * @param interval 提示信息显示时长，单位秒
 */
+(void) showToast:(UIView *)rootView withText:(NSString *) text withInterval:(float) interval{
    CGRect rc = CGRectMake(10, 150, 300, 40);
    ALDToastView *toastView = [[ALDToastView alloc] initWithFrame:rc];
    toastView.showTimes=interval;
    [toastView setTipsMessage:text];
    [rootView addSubview:toastView];
    [toastView release];
}

+(void) showAlert:(NSString*) title strForMsg:(NSString*) msg withTag:(NSInteger) tag otherButtonTitles:(NSString*) btnTitle{
    UIAlertView* alert;
    NSString *closeText=OpenApiLocalizedString(@"关闭",@"close",@"");
    if(btnTitle){
        alert = [[UIAlertView alloc] initWithTitle:title message:msg delegate:nil cancelButtonTitle:closeText otherButtonTitles:btnTitle,nil];
    }else{
        alert = [[UIAlertView alloc] initWithTitle:title message:msg delegate:nil cancelButtonTitle:closeText otherButtonTitles:btnTitle,nil];
    }
    alert.tag = tag;
    [alert show];
    [alert release];
}

+(void) showAlert:(NSString*) title strForMsg:(NSString*) msg withTag:(NSInteger) tag withDelegate:(id<UIAlertViewDelegate>)delegate otherButtonTitles:(NSString*) btnTitle{
    UIAlertView* alert;
    NSString *closeText=OpenApiLocalizedString(@"关闭",@"close",@"");
    if(btnTitle){
        alert = [[UIAlertView alloc] initWithTitle:title message:msg delegate:delegate cancelButtonTitle:closeText otherButtonTitles:btnTitle,nil];
    }else{
        alert = [[UIAlertView alloc] initWithTitle:title message:msg delegate:delegate cancelButtonTitle:closeText otherButtonTitles:btnTitle,nil];
    }
    alert.tag = tag;
    [alert show];
    [alert release];
}
@end
